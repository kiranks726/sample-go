name: Continuous Integration

on:
  # push:
  #   branches:
  #     - "**"
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [master, release/*, develop, feature/*]

  # workflow_call enables this workflow to be called in another workflow
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest

    # These permissions are needed to interact with GitHub's OIDC Token endpoint
    permissions:
      id-token: write
      contents: read
      pull-requests: write
      checks: write
       

    env:
      node-version: 16.14.0
      go-version: 1.17

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Nodejs ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}

      - name: Setup Go ${{ env.go-version }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.go-version }}

      - name: Install dependencies
        run: make install

      # - name: Configure aws
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     role-to-assume: arn:aws:iam::593186514662:role/github-actions-role
      #     role-session-name: GithubCIActions
      #     aws-region: us-east-1

      # This generates Cloud formation template which is referenced by the sst unit test cases.
      # The generated Cloud formation template is only used for running tests against and not deployed.
      # - name: Synthesize stack
      #   run: make build

      # - name: Run lint and create annotations
      #   uses: golangci/golangci-lint-action@v3
      #   with:
      #     version: 'latest'
      #     working-directory: ${{ github.workspace }}/backend/mainmodule

      # - name: Run test
      #   run: make test

      - name: Run diff to see infrastructure changes
        run: |
          echo "Github event ${{ github.event }}"
          npx sst telemetry disable
          # npx sst diff --stage dev 2>&1 | tee infra_changes_report.log
          npx sst diff --fail 
          # && echo "no diffs found" || echo "diffs found"
          echo "exit status code is: $?"

      # - name: Display infrastructure changes in Pull Request
      #   if: github.event_name == 'pull_request'
      #   env:
      #     PR_COMMENTS_URL: ${{ github.event.pull_request.comments_url }}
      #     PR_URL: ${{ github.event.pull_request.html_url}}
      #     COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
      #   run: |
      #     output=$(cat infra_changes_report.log)
      #     prCommitUrl="${PR_URL}/commits/${COMMIT_SHA}"
      #     commitMessage=$(git --git-dir ${{ github.workspace }}/.git log --format=%B -n 1 HEAD^2)
      #     commentWrapper="#### Differences between the infrastructure specified in the current state of the app and the currently deployed application
      #     <a href="${prCommitUrl}">Commit: ${commitMessage}</a>
      #     <details><summary>Show Output</summary>

      #     \`\`\`
      #     ${output}
      #     \`\`\`

      #     </details>
      #     "
      #     payload=$(echo "${commentWrapper}" | jq -R --slurp '{body: .}')

      #     echo "${payload}" | curl -s -S --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" --header "Content-Type: application/json" --data @- "${PR_COMMENTS_URL}" > /dev/null
          
      # - name: Display coverage metrics in Pull Request
      #   if: github.event_name == 'pull_request'
      #   uses: 5monkeys/cobertura-action@master
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     path: ${{ github.workspace }}/reports/coverage/coverage_report.xml
      #     skip_covered: true
      #     minimum_coverage: 1
      #     fail_below_threshold: false
      #     show_line: true
      #     show_branch: true
      #     show_class_names: true
      #     show_missing: true
      #     show_missing_max_length: true
      #     link_missing_lines: false
      #     #link_missing_lines_source_dir: ${{ github.workspace }}/backend/mainmodule
      #     only_changed_files: false
      #     pull_request_number: false
      #     report_name: Coverage Metrics
    
      # - name: Add action summary
      #   if: github.event_name == 'pull_request'
      #   run: echo '### Hello world! :rocket:' >> $GITHUB_STEP_SUMMARY