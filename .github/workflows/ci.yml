name: Continuous Integration

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [master, release/*, develop]

  # workflow_call enables this workflow to be called in another workflow
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest

    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read

    env:
      node-version: 16.14.0
      go-version: 1.17

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Nodejs ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}

      - name: Setup Go ${{ env.go-version }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.go-version }}

      - name: Install dependencies
        run: make install

      - name: Configure aws
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::593186514662:role/github-actions-role
          role-session-name: GithubCIActions
          aws-region: us-east-1

      # This generates Cloud formation template which is referenced by the sst unit test cases.
      # The generated Cloud formation template is only used for running tests against and not deployed
      # - name: Synthesize stack
      #   run: npx sst build --stage dev
      # - name: Run lint
      #   run: make lint
      # - name: Run lint and create annotations
      #   uses: golangci/golangci-lint-action@v3
      #   with:
      #     version: 'latest'
      #     working-directory: backend/mainmodule
      # - name: Run test
      #   run: make test
      - name: cdk diff
        env:
          PR_COMMENTS_URL: ${{ github.event.pull_request.comments_url }}
          PR_URL: ${{ github.event.pull_request.html_url}}
          COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
          COMMIT_MESSAGE: $(git log --format=%B -n 1 HEAD^2)
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          echo "Commit message is: ${COMMIT_MESSAGE}"
          npx sst telemetry disable
          npx sst diff --stage dev 2>&1 | tee infra_changes_report.log
          output=$(cat infra_changes_report.log)
          prCommitUrl="${PR_URL}/commits/${COMMIT_SHA}"
          commentWrapper="#### Differences between the infrastructure specified in the current state of the CDK app and the currently deployed application
          <a href="${prCommitUrl}">Commit: ${COMMIT_MESSAGE}</a>
          <details><summary>Show Output</summary>

          \`\`\`
          ${output}
          \`\`\`

          </details>
          "
          payload=$(echo "${commentWrapper}" | jq -R --slurp '{body: .}')

          echo "${payload}" | curl -s -S --header "Authorization: token ${GITHUB_TOKEN}" --header "Content-Type: application/json" --data @- "${PR_COMMENTS_URL}" > /dev/null

        # uses: youyo/aws-cdk-github-actions@v2
        # with:
        #   cdk_subcommand: 'diff'
        #   actions_comment: true
        # env:
        #   AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
        #   AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
        #   AWS_DEFAULT_REGION: 'us-east-1'

      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v2
      #   with:
      #     directory: ./reports/coverage/
      #     fail_ci_if_error: true
      #     files: coverage_report.xml
      #     flags: unittests
      #     verbose: true
